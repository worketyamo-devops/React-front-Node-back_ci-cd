name: CI CD workflow
on:
  push:
    branches: [ main ]


jobs:

  # etapes reserves au testes avant le build 
  Test_unitaires_backend:
    runs-on: self-hosted
    steps:
      - name: clone the code 
        uses: actions/checkout@v3
      
      - name: enter inside the code
        run: cd ReactJS_with_backend_and_frontend/backend

      - name: Installer Jest et Supertest pour les test unitaires du backend 
        run: |
          npm install
          npm install --save-dev jest supertest mongoose-mock dotenv
      
      - name: modifier index.js pour le rendre testable 
        run: echo "module.exports = { app, server };" >> index.js

      # je ferais la creationde ces partie manuelement avant d'envoyer sur github 
      # - name: creer le dossier de testes 
      #   run: mkdir tests

      # - name: creer le fichier de test tests/index.test.js 
      #   run: 
      
      - name: laner le test backend 
        run:  npm  test




  # Test_unitaires_Frontend:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: clone the code 
  #       uses: actions/checkout@v3
      
  #     - name: enter inside the code
  #       run: cd ReactJS_with_backend_and_frontend/backend

  #     - name: Installer Jest et Supertest pour les test unitaires du backend 
  #       run: npm install --save-dev jest supertest mongoose-mock dotenv
      
  #     - name: modifier index.js pour le rendre testable 
  #       run: echo "module.exports = { app, server };" >> index.js

  #     # je ferais la creationde ces partie manuelement avant d'envoyer sur github 
  #     # - name: creer le dossier de testes 
  #     #   run: mkdir tests

  #     # - name: creer le fichier de test tests/index.test.js 
  #     #   run: 
      
  #     - name: laner le test backend 
  #       run:  npm  test
      




  # Test_Dintegration:
  #   runs-on: ubuntu-latest

  # Test_de_validation:
  #   runs-on: ubuntu-latest


  # docker-build-pull-push: 
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: clone the code 
  #       uses: actions/checkout@v3
        
  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v3
  #       with:
  #         username: ${{ vars.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}
          
  #     - name: build image 
  #       run: docker build -t robertolandry/ci-cd_django_app  .


  #     - name: push image to Docker Hub
  #       run: docker push robertolandry/ci-cd_django_app:latest
